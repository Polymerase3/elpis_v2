services:
  db:
    image: timescale/timescaledb:latest-pg15
    container_name: elpis_postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      # Persist data to a host folder for easy backups & inspection:
      - ./data/db:/var/lib/postgresql/data
      # Init scripts (run only once when ./data/db is empty)
      - ./db/init:/docker-entrypoint-initdb.d:ro
    command: >
      postgres
      -c max_connections=200
      -c max_locks_per_transaction=1024
      -c max_worker_processes=32
      -c max_parallel_workers=16
      -c max_parallel_workers_per_gather=4
# No named volumes hereâ€”./data/db is in your project folder.
  pg_exporter:
      image: prometheuscommunity/postgres-exporter:latest
      container_name: elpis_pg_exporter
      restart: unless-stopped
      depends_on:
        - db
      environment:
        # uses your .env POSTGRES_USER / POSTGRES_PASSWORD / POSTGRES_DB if you wish
        DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      ports:
        - "9187:9187"
  prometheus:
      image: prom/prometheus:latest
      container_name: elpis_prometheus
      restart: unless-stopped
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      command:
        - --config.file=/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
          
  grafana:
    image: grafana/grafana:latest
    container_name: elpis_grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
